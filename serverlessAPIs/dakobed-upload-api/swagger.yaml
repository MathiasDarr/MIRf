swagger: "2.0"
info:
  description: "Dakobed Upload-API"
  version: "1.0.0"
  title: "Dakobed Upload API"
host: "petstore.com"
basePath: "/v1"
schemes:
- "https"
paths:
  /upload:
    options:
      responses:
        200:
          description: "Success"
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        type: "mock"
        httpMethod: "POST"
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

#application/json: "{\r\n  \"method\": \"$context.httpMethod\",\r\n  \"body\" : \"$input.body\",\r\n  \"headers\": {\r\n    #foreach($param in $input.params().header.keySet())\r\n    \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\" #if($foreach.hasNext),#end\r\n\r\n    #end\r\n  },\r\n  \"queryParams\": {\r\n    #foreach($param in $input.params().querystring.keySet())\r\n    \"$param\": \"$util.escapeJavaScript($input.params().querystring.get($param))\" #if($foreach.hasNext),#end\r\n\r\n    #end\r\n  },\r\n  \"pathParams\": {\r\n    #foreach($param in $input.params().path.keySet())\r\n    \"$param\": \"$util.escapeJavaScript($input.params().path.get($param))\" #if($foreach.hasNext),#end\r\n\r\n    #end\r\n  }  \r\n}"

    post:
      tags:
        - "upload"
      summary: "Upload a new file to S3"
      description: ""
      operationId: "uploadAudio"
      consumes:
        - application/audio
      produces:
        - "application/json"

      responses:
        200:
          description: "Success"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized"
        500:
          description: "Internal Server Error"
      # For AWS Integration
      x-amazon-apigateway-request-validators:
        basic:
          validateRequestParameters: true
      x-amazon-apigateway-integration:
        type: "aws"
        httpMethod: "POST"
        # Replace AWS_REGION and ACCOUNT_ID in uri
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:710339184759:function:UploadFunction/invocations"
        responses:
          default:
            statusCode: 200
        passthroughBehavior: "when_no_templates"
        requestTemplates:
          application/audio: "{ \r\n \"content\" : $input.body \r\n} "

definitions:
  Empty:
    type: object
    title: Empty Schema